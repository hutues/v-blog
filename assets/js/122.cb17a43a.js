(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{538:function(t,s,a){"use strict";a.r(s);var e=a(62),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"shell-教程-一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell-教程-一"}},[t._v("#")]),t._v(" Shell 教程(一)")]),t._v(" "),a("h2",{attrs:{id:"_1-概要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-概要"}},[t._v("#")]),t._v(" 1 概要")]),t._v(" "),a("h3",{attrs:{id:"_1-1-shell概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-shell概述"}},[t._v("#")]),t._v(" 1.1 Shell概述")]),t._v(" "),a("p",[t._v("​\t\tShell是一个C语言编写的程序，它是用户使用Linux的桥梁。Shell既是一种命令语言，又是一种程序设计语言。\n​\t\tShell是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。\n​\t\tKen Thompson的sh是一种Unix Shell，Windows Explorer是一个典型的图形界面Shell。")]),t._v(" "),a("h3",{attrs:{id:"_1-2-shell脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-shell脚本"}},[t._v("#")]),t._v(" 1.2 Shell脚本")]),t._v(" "),a("p",[t._v("​\t\tShell脚本(shell script),是一种为shell编写的脚本程序。")]),t._v(" "),a("p",[t._v("​\t\t我们说的shell通常是指shell脚本，但shell和shell script是两个不同的概念。")]),t._v(" "),a("p",[t._v("​\t\t本文出现的“shell编程” 都是指shell脚本编程，不是指开发shell。")]),t._v(" "),a("h3",{attrs:{id:"_1-3-shell环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-shell环境"}},[t._v("#")]),t._v(" 1.3 Shell环境")]),t._v(" "),a("p",[t._v("​\t\tShell编程跟JavaScript、PHP编程一样，只要有一个能写代码的文本编辑器和一个能解释执行的脚本解释器即可。")]),t._v(" "),a("p",[t._v("Linux的Shell种类众多，常见的有：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Bourne Shell（/usr/bin/sh或/bin/sh）")])]),t._v(" "),a("li",[a("p",[t._v("Bourne Again Shell （/bin/bash）")])]),t._v(" "),a("li",[a("p",[t._v("C Sheel （/usr/bin/csh）")])]),t._v(" "),a("li",[a("p",[t._v("K Sheel（/usr/bin/ksh）")])]),t._v(" "),a("li",[a("p",[t._v("Sheel for Root（/sbin/sh）")])]),t._v(" "),a("li",[a("p",[t._v("......")])])]),t._v(" "),a("p",[t._v("​        本教程关注的是Bash，也就是Bourne Again Shell，因为它易用，免费，在日常生活中已经被广泛应用。\n而且，Bash也是大多数Linux系统默认的Shell。\n一般情况下，不区分Bourne Shell和Bourne Again Shell，"),a("code",[t._v("#!/bin/sh")]),t._v("，同样可以修改为"),a("code",[t._v("#!/bin/bash")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_2-第一个shell脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-第一个shell脚本"}},[t._v("#")]),t._v(" 2 第一个Shell脚本")]),t._v(" "),a("h3",{attrs:{id:"_2-1-创建脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-创建脚本"}},[t._v("#")]),t._v(" 2.1 创建脚本")]),t._v(" "),a("p",[t._v("​\t\t打开文本编辑器(可以使用vi/vim命令来创建文件)，新建一个文件test.sh，扩展名为sh(sh代表shell)。\n​\t\t扩展名并不会影响脚本的执行，见名知意就好，如果你用php写shell脚本，扩展名用php就好了。")]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World !"')]),t._v("\n")])])]),a("p",[a("code",[t._v("#!")]),t._v(" 是一个约定的标记，告诉系统这个脚本需要什么解释器来执行(使用哪一种shell)")]),t._v(" "),a("h3",{attrs:{id:"_2-2-执行脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-执行脚本"}},[t._v("#")]),t._v(" 2.2 执行脚本")]),t._v(" "),a("h4",{attrs:{id:"_2-2-1-作为可执行程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-作为可执行程序"}},[t._v("#")]),t._v(" 2.2.1 作为可执行程序")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x ./test.sh  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使得脚本具有执行权限")]),t._v("\n./test.sh "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行脚本")]),t._v("\n")])])]),a("p",[t._v("注意，一定要写成"),a("code",[t._v("./test.sh")]),t._v("，而不是"),a("code",[t._v("test.sh")]),t._v("。")]),t._v(" "),a("p",[t._v("因为直接写test.sh，linux系统会去PATH里面找test.sh，而只有/bin，/sbin，/usr/bin等在PATH里面。写成"),a("code",[t._v("./test.sh")]),t._v("，就告诉系统在当前目录找一个叫test.sh的。")]),t._v(" "),a("h4",{attrs:{id:"_2-2-2-作为解释器参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-作为解释器参数"}},[t._v("#")]),t._v(" 2.2.2 作为解释器参数")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("/bin/sh test.sh\n/bin/php test.php\n")])])]),a("p",[t._v("此方式运行的脚本，不需要在第一行指定解释器信息，写了也没用。")]),t._v(" "),a("h2",{attrs:{id:"_3-shell变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-shell变量"}},[t._v("#")]),t._v(" 3 Shell变量")]),t._v(" "),a("h3",{attrs:{id:"_3-1-变量的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-变量的定义"}},[t._v("#")]),t._v(" 3.1 变量的定义")]),t._v(" "),a("p",[t._v("定义变量时，变量名不需要加美元符（$）如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"huwenfeng.xyz"')]),t._v("\nyour_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"huwenfeng.xyz"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 反例：变量名和等号之间不能有空格  ")]),t._v("\n")])])]),a("p",[t._v("变量命名注意事项：")]),t._v(" "),a("ul",[a("li",[t._v("只能用英文字母，数字，下划线，不能以数字开头")]),t._v(" "),a("li",[t._v("中间不能有空格，可以使用下划线（_）")]),t._v(" "),a("li",[t._v("不能使用标点符号")]),t._v(" "),a("li",[t._v("不能使用bash里面的关键字（可用help命令查看保留关键字）")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-变量的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-变量的使用"}},[t._v("#")]),t._v(" 3.2 变量的使用")]),t._v(" "),a("p",[t._v("使用一个定义过的变量，只要在变量名后面加美元符即可，如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"huwenfeng"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${your_name}")]),t._v("\n")])])]),a("p",[t._v("变量名外面的花括号是可选的，加不加都行，加了是帮助解释器识别边界。比如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("skill")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" Ada Coffe Action Java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am good at '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${skill}")]),t._v('Script"')]),t._v("\t\t\n")])])]),a("p",[t._v("如果上述不加花括号，就会将"),a("code",[t._v("skillScript")]),t._v("当成一个变量，而不是我们想要的结果。")]),t._v(" "),a("p",[t._v("推荐给所有的变量加上花括号，这是一个编程的好习惯。")]),t._v(" "),a("p",[t._v("已经定义的变量也可以被重复定义，")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alibaba"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),t._v("\n")])])]),a("p",[t._v("这样写是合法的，注意，赋值的时候不能写"),a("code",[t._v('$your_name="alibaba"')]),t._v("，使用变量才加美元符（$）。")]),t._v(" "),a("h4",{attrs:{id:"只读变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只读变量"}},[t._v("#")]),t._v(" 只读变量")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("readonly")]),t._v("命令可以将变量定义为只读变量(值不能被改变)。比如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("myUrl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.google.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("readonly")]),t._v(" myUrl\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("myUrl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://huwenfeng.xyz"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误提示: read-only variable: myUrl")]),t._v("\n")])])]),a("h4",{attrs:{id:"删除变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除变量"}},[t._v("#")]),t._v(" 删除变量")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("unset")]),t._v(" 命令可以删除变量。语法：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("unset")]),t._v(" variable_name\n")])])]),a("p",[t._v("变量被删除后不能再次使用。unset命令不能删除只读变量。比如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("myUrl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://huwenfeng.xyz"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("unset")]),t._v(" myUrl\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${myUrl}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将不会有任何输出")]),t._v("\n")])])]),a("h4",{attrs:{id:"变量类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量类型"}},[t._v("#")]),t._v(" 变量类型")]),t._v(" "),a("p",[t._v("运行shell时，会有三种变量类型：")]),t._v(" "),a("ul",[a("li",[t._v("局部变量：在脚本或命令中定义，仅在当前shell实例中有效，其它shell启动的程序不能访问。")]),t._v(" "),a("li",[t._v("环境变量：所有程序，包括shell启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候shell脚本也可以定义环境变量。")]),t._v(" "),a("li",[t._v("shell变量：shell程序设置的特殊变量。shell变量中一部分是环境变量，一部分是局部变量，这些变量保证了shell的正常运行。")])]),t._v(" "),a("h3",{attrs:{id:"_3-3-shell字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-shell字符串"}},[t._v("#")]),t._v(" 3.3 Shell字符串")]),t._v(" "),a("h4",{attrs:{id:"单引号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单引号"}},[t._v("#")]),t._v(" 单引号")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is a string'")]),t._v("\n")])])]),a("p",[t._v("单引号字符串的限制：")]),t._v(" "),a("ul",[a("li",[t._v("单引号里的任何字符都会原样输出，单引号中字符串的变量是无效的；")]),t._v(" "),a("li",[t._v("单引号字符串中不能出现单独的一个引号。")])]),t._v(" "),a("h4",{attrs:{id:"双引号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双引号"}},[t._v("#")]),t._v(" 双引号")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"huwenfeng"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, I know you are '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${your_name}")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('! "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -e "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${str}")]),t._v("\n")])])]),a("p",[t._v("双引号的有点：")]),t._v(" "),a("ul",[a("li",[t._v("双引号里可以有变量；")]),t._v(" "),a("li",[t._v("双引号可以出现转义字符。")])]),t._v(" "),a("h4",{attrs:{id:"拼接字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼接字符串"}},[t._v("#")]),t._v(" 拼接字符串")]),t._v(" "),a("p",[t._v("直接使用单引号或者双引号进行拼接，比如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用双引号拼接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, "')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" !"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting_1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${your_name}")]),t._v(' !"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting_1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用单引号拼接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting_2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, '")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' !'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting_3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, ${your_name} !'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting_2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting_3")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出结果如下：")]),t._v("\nhello, runoob "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" hello, runoob "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nhello, runoob "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" hello, "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${your_name}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),a("h4",{attrs:{id:"获取字符串长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取字符串长度"}},[t._v("#")]),t._v(" 获取字符串长度")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("#")]),t._v("加上字符串，获取字符串长度，比如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcd"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("string}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出4")]),t._v("\n")])])]),a("h4",{attrs:{id:"提取字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取字符串"}},[t._v("#")]),t._v(" 提取字符串")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("string:起始位置索引:提取字符个数")]),t._v("，比如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"happy every day"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 索引位置是从0开始")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("4}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  从索引为1的位置开始，截取四个字符， 输出 appy")]),t._v("\n")])])]),a("h4",{attrs:{id:"查找子字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找子字符串"}},[t._v("#")]),t._v(" 查找子字符串")]),t._v(" "),a("p",[t._v("查找字符串h或o的位置（哪个字母先出现就计算哪个）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"happy every day"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${string}")]),t._v('"')]),t._v(" ho"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出1,这个位置是从1开始，区别于字符串的索引。")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-shell数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-shell数组"}},[t._v("#")]),t._v(" 4 Shell数组")]),t._v(" "),a("p",[t._v("bash支持一维数组（不支持多维数组），并且没有限定数组的大小。")]),t._v(" "),a("p",[t._v("数组下标从0开始。根据下标可以获取数组中元素，下标可以是整数或算数表达式。")]),t._v(" "),a("h3",{attrs:{id:"定义数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义数组"}},[t._v("#")]),t._v(" 定义数组")]),t._v(" "),a("p",[t._v('Shell中，用括号来表示数组，数组元素用"空格"符号分隔开。定义数组一般形式为：')]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("数组名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值1 值2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". 值n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value0 value1 value2 value3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nvalue0\nvalue1\nvalue2\nvalue3\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 还可以单独定义数组的各个分量")]),t._v("\narray_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value0\narray_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value1\narray_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("valuen\n")])])]),a("p",[t._v("可以不使用连续的下标，而且下标的范围没有限制。")]),t._v(" "),a("h3",{attrs:{id:"读取数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取数组"}},[t._v("#")]),t._v(" 读取数组")]),t._v(" "),a("p",[t._v("读取数组的一般格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${数组名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("下标"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 例如")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用@符号可以或者数组汇总的所有元素，例如：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"获取数组的长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取数组的长度"}},[t._v("#")]),t._v(" 获取数组的长度")]),t._v(" "),a("p",[t._v("获取数组的长度和获取字符串的长度相同，例如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取得数组元素的个数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" 取得数组单个元素的长度\nlength=${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5-shell注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-shell注释"}},[t._v("#")]),t._v(" 5 Shell注释")]),t._v(" "),a("h3",{attrs:{id:"单行注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单行注释"}},[t._v("#")]),t._v(" 单行注释")]),t._v(" "),a("p",[t._v("以 "),a("strong",[t._v("#")]),t._v(" 开头的行就是注释，会被解释器忽略。")]),t._v(" "),a("p",[t._v("通过每一行加一个 "),a("strong",[t._v("#")]),t._v(" 号设置多行注释，像这样：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#--------------------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这是一个注释")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author：菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# site：www.runoob.com")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# slogan：学的不仅是技术，更是梦想！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#--------------------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##### 用户配置区 开始 #####")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里可以添加脚本描述信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##### 用户配置区 结束  #####")]),t._v("\n")])])]),a("p",[t._v("如果在开发过程中，遇到大段代码需要临时注释起来，过一会又要取消注释，怎么办？")]),t._v(" "),a("p",[t._v("每一行加个#符号太费劲了，可以吧这一段要注释的代码用一对花括号括起来，定义成一个函数，没有地方调用这个函数，这块代码就不会执行，就带到了和注释一样的效果。")]),t._v(" "),a("h3",{attrs:{id:"多行注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行注释"}},[t._v("#")]),t._v(" 多行注释")]),t._v(" "),a("p",[t._v("格式："),a("code",[t._v(":<< 加上 EOF | '(单引号) | ！(叹号)")])]),t._v(" "),a("p",[t._v("多行注释可以使用以下格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n注释内容...\n注释内容...\n注释内容...\nEOF")]),t._v("\n")])])]),a("p",[t._v("EOF也可以使用其他符号：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n注释内容...\n注释内容...\n注释内容...\n'")]),t._v("\n\n:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n注释内容"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n注释内容"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n注释内容"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),a("h2",{attrs:{id:"_6-shell传递参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-shell传递参数"}},[t._v("#")]),t._v(" 6 Shell传递参数")]),t._v(" "),a("p",[t._v("脚本内获取参数对的格式为："),a("code",[t._v("$n 其中n")]),t._v("代表一个数字，"),a("code",[t._v("$1中1")]),t._v("为执行脚本的第一个参数 ，"),a("code",[t._v("$2中的2")]),t._v("为执行脚本的第二个参数，以此类推。。。")]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author:菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url:www.runoob.com")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shell 传递参数实例！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"执行的文件名：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第一个参数为：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第二个参数为：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第三个参数为：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$#")]),t._v("\n")])])]),a("p",[t._v("为脚本设置可执行权限，并执行脚本，输出结果如下所示：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x test.sh "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加执行权限")]),t._v("\n$ ./test.sh "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行脚本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出结果为")]),t._v("\nShell 传递参数实例！\n执行的文件名为：./test.sh\n第一个参数为：1\n第二个参数为：2\n第三个参数为：3\n")])])]),a("p",[t._v("另外，还有几个特殊字符用来处理参数：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数处理")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$#")]),t._v(" "),a("td",[t._v("传递到脚本的参数个数")])]),t._v(" "),a("tr",[a("td",[t._v("$*")]),t._v(" "),a("td",[t._v("以单个字符串显示所有脚本传递的参数")])]),t._v(" "),a("tr",[a("td",[t._v("$$")]),t._v(" "),a("td",[t._v("脚本运行的当前进程ID号")])]),t._v(" "),a("tr",[a("td",[t._v("$!")]),t._v(" "),a("td",[t._v("后台运行的最后一个进程ID号")])]),t._v(" "),a("tr",[a("td",[t._v("$@")]),t._v(" "),a("td",[t._v("和$*相同，但是使用时加引号，并在引号中返回每个参数")])]),t._v(" "),a("tr",[a("td",[t._v("$-")]),t._v(" "),a("td",[t._v("显示Shell使用的当前选项，与set命令功能相同")])]),t._v(" "),a("tr",[a("td",[t._v("$?")]),t._v(" "),a("td",[t._v("显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误")])])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author:菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url:www.runoob.com")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shell 传递参数实例！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第一个参数为：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"参数个数为：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$#")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"传递的参数作为一个字符串显示：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$*")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"传递的每个参数作为一个字符串显示：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),t._v("\n")])])]),a("p",[t._v("执行脚本，输出结果如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x test.sh\n$ ./test.sh\nShell 传递参数示例！\n第一个参数为：1\n参数个数为：3\n传递的参数作为一个字符串显示：1 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("p",[t._v("$*与$@区别：")]),t._v(" "),a("ul",[a("li",[t._v("相同点：都是引用所有参数")]),t._v(" "),a("li",[t._v('不同的：$*显示为"1 2 3"(一个字符串)，$@显示为"1" "2" "3"(3个字符串)')])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author:菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url:www.runoob.com")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-- \\'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$*")]),t._v(' 演示 ---"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$*")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-- \\'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v(' 演示 ---"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("执行脚本，输出结果如下所示：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x test.sh\n$ ./test.sh "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n-- "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$*")]),t._v(" 演示 ---\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n-- "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v(" 演示 ---\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h2",{attrs:{id:"_7-shell运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-shell运算符"}},[t._v("#")]),t._v(" 7 Shell运算符")]),t._v(" "),a("p",[t._v("Shell支持多种运算符：")]),t._v(" "),a("ul",[a("li",[t._v("算法运算符")]),t._v(" "),a("li",[t._v("关系运算符")]),t._v(" "),a("li",[t._v("布尔运算符")]),t._v(" "),a("li",[t._v("字符串运算符")]),t._v(" "),a("li",[t._v("文件测试运算符")])]),t._v(" "),a("p",[t._v("原生的bash不支持简单的数学运算，但是可以通过其他命令来实现，例如awk和expr，expr最为常用。")]),t._v(" "),a("p",[a("code",[t._v("expr")]),t._v("是一款表达式计算工具，使用它能完成表达式的求值操作。")]),t._v(" "),a("p",[t._v("例如，两个数相加(注意使用的是反引号` 而不是单引号')：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果 2+2是错误的 运算符之间需要有空格 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"两数之和为：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${val}")]),t._v('"')]),t._v("\n")])])]),a("p",[t._v("需要注意的地方：")]),t._v(" "),a("ul",[a("li",[t._v("表达式和运算符之间需要有空格")]),t._v(" "),a("li",[t._v("完整的表达式需要用两个反引号``包裹。")])]),t._v(" "),a("h3",{attrs:{id:"算数运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[t._v("#")]),t._v(" 算数运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("`expr $a + $b`")])]),t._v(" "),a("tr",[a("td",[t._v("-")]),t._v(" "),a("td",[t._v("`expr $a - $b`")])]),t._v(" "),a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("`expr $a * $b`")])]),t._v(" "),a("tr",[a("td",[t._v("/")]),t._v(" "),a("td",[t._v("`expr $a / $b`")])]),t._v(" "),a("tr",[a("td",[t._v("%")]),t._v(" "),a("td",[t._v("`expr $a % $b`")])]),t._v(" "),a("tr",[a("td",[t._v("=")]),t._v(" "),a("td",[t._v("a=$b 把变量b的值，赋值给a")])]),t._v(" "),a("tr",[a("td",[t._v("==")]),t._v(" "),a("td",[t._v("[ $a == $b ]")])]),t._v(" "),a("tr",[a("td",[t._v("!=")]),t._v(" "),a("td",[t._v("[ $a != $b ]")])])])]),t._v(" "),a("p",[t._v("注意：条件表达式要放在两个方括号之间，并且需要加空格，例如[$a==$b]是错误的，必须写成[ $a == $b ]。")]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $a + $b"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a + b : '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),t._v('"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $a - $b"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a - b : '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),t._v('"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $a "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("* $b"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a * b : '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),t._v('"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $b / $a"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b / a : '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),t._v('"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $b % $a"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b % a : '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),t._v('"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a 等于 b"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a 不等于 b"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("a + b : 30\na - b : -10\na * b : 200\nb / a : 2\nb % a : 0\na 不等于 b\n")])])]),a("p",[t._v("注意：")]),t._v(" "),a("ul",[a("li",[t._v("乘号（*）前边必须加反斜杠（\\）才能实现乘法运算；")]),t._v(" "),a("li",[t._v("if...then...fi 是条件语句")]),t._v(" "),a("li",[t._v('Mac中shell的expr语法是：$((表达式))，此处表达式中的"*"不需要转移符号"\\"。')])]),t._v(" "),a("h3",{attrs:{id:"关系运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[t._v("#")]),t._v(" 关系运算符")]),t._v(" "),a("p",[t._v("关系运算符只支持数字，不支持字符串，除非字符串的值是数字。")]),t._v(" "),a("p",[t._v("下表列出了常用的关系运算符，假定变量 a 为 10，变量 b 为 20：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-eq")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测两个数是否相等，相等返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a -eq $b ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-ne")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测两个数是否不相等，不相等返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a -ne $b ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-gt")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测左边的数是否大于右边的，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a -gt $b ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-lt")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测左边的数是否小于右边的，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a -lt $b ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-ge")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测左边的数是否大于等于右边的，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a -ge $b ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-le")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测左边的数是否小于等于右边的，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a -le $b ] 返回 true。")])])])]),t._v(" "),a("h3",{attrs:{id:"布尔运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔运算符"}},[t._v("#")]),t._v(" 布尔运算符")]),t._v(" "),a("p",[t._v("下表列出了常用的布尔运算符，假定变量 a 为 10，变量 b 为 20：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("!")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非运算，表达式为 true 则返回 false，否则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ ! false ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-o")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("或运算，有一个表达式为 true 则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a -lt 20 -o $b -gt 100 ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("与运算，两个表达式都为 true 才返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a -lt 20 -a $b -gt 100 ] 返回 false。")])])])]),t._v(" "),a("h3",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),a("p",[t._v("以下介绍 Shell 的逻辑运算符，假定变量 a 为 10，变量 b 为 20:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("&&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑的 AND")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[[ $a -lt 100 && $b -gt 100 ]] 返回 false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("||")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑的 OR")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[[ $a -lt 100 || $b -gt 100 ]] 返回 true")])])])]),t._v(" "),a("h3",{attrs:{id:"字符串运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串运算符"}},[t._v("#")]),t._v(" 字符串运算符")]),t._v(" "),a("p",[t._v('下表列出了常用的字符串运算符，假定变量 a 为 "abc"，变量 b 为 "efg"：')]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测两个字符串是否相等，相等返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a = $b ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("!=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测两个字符串是否相等，不相等返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a != $b ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-z")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测字符串长度是否为0，为0返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -z $a ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-n")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测字符串长度是否不为 0，不为 0 返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('[ -n "$a" ] 返回 true。')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测字符串是否为空，不为空返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ $a ] 返回 true。")])])])]),t._v(" "),a("h3",{attrs:{id:"文件测试运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件测试运算符"}},[t._v("#")]),t._v(" 文件测试运算符")]),t._v(" "),a("p",[t._v("文件测试运算符用于检测 Unix 文件的各种属性。语法：操作符 + 文件")]),t._v(" "),a("p",[t._v("属性检测描述如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("操作符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-b file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否是块设备文件，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -b $file ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-c file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否是字符设备文件，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -c $file ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-d file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否是目录，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -d $file ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-f file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -f $file ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-g file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否设置了 SGID 位，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -g $file ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-k file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -k $file ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-p file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否是有名管道，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -p $file ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-u file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否设置了 SUID 位，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -u $file ] 返回 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-r file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否可读，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -r $file ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-w file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否可写，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -w $file ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-x file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否可执行，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -x $file ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-s file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件是否为空（文件大小是否大于0），不为空返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -s $file ] 返回 true。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-e file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("检测文件（包括目录）是否存在，如果是，则返回 true。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[ -e $file ] 返回 true。")])])])]),t._v(" "),a("p",[t._v("其他检查符：")]),t._v(" "),a("ul",[a("li",[t._v("-S：判断某文件是否为socket")]),t._v(" "),a("li",[t._v("-L：检测文件是否存在并且是一个符号链接。")])]),t._v(" "),a("h2",{attrs:{id:"_8-shell-echo命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-shell-echo命令"}},[t._v("#")]),t._v(" 8 Shell echo命令")]),t._v(" "),a("p",[t._v("Shell 的 echo 指令与 PHP 的 echo 指令类似，都是用于字符串的输出。命令格式：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("echo string\n")])])]),a("p",[t._v("您可以使用echo实现更复杂的输出格式控制。")]),t._v(" "),a("h3",{attrs:{id:"_1-显示普通字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-显示普通字符串"}},[t._v("#")]),t._v(" 1.显示普通字符串:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"It is a test"')]),t._v("\n")])])]),a("p",[t._v("这里的双引号完全可以省略，以下命令与上面实例效果一致：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" It is a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-显示转义字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-显示转义字符"}},[t._v("#")]),t._v(" 2.显示转义字符")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("It is a test"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('"')]),t._v("\n")])])]),a("p",[t._v("结果将是:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('"It is a test"\n')])])]),a("p",[t._v("同样，双引号也可以省略")]),t._v(" "),a("h3",{attrs:{id:"_3-显示变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-显示变量"}},[t._v("#")]),t._v(" 3.显示变量")]),t._v(" "),a("p",[t._v("read 命令从标准输入中读取一行,并把输入行的每个字段的值指定给 shell 变量")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" name \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(' It is a test"')]),t._v("\n")])])]),a("p",[t._v("以上代码保存为 test.sh，name 接收标准输入的变量，结果将是:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@www ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sh test.sh")]),t._v("\nOK                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标准输入")]),t._v("\nOK It is a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-显示换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-显示换行"}},[t._v("#")]),t._v(" 4.显示换行")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK! '),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -e 开启转义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"It is a test"')]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("OK!\n\nIt is a test\n")])])]),a("h3",{attrs:{id:"_5-显示不换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-显示不换行"}},[t._v("#")]),t._v(" 5.显示不换行")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK! '),a("span",{pre:!0,attrs:{class:"token entity",title:"\\c"}},[t._v("\\c")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -e 开启转义 \\c 不换行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"It is a test"')]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("OK! It is a test\n")])])]),a("h3",{attrs:{id:"_6-显示结果定向至文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-显示结果定向至文件"}},[t._v("#")]),t._v(" 6.显示结果定向至文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"It is a test"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" myfile\n")])])]),a("h3",{attrs:{id:"_7-原样输出字符串-不进行转义或取变量-用单引号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-原样输出字符串-不进行转义或取变量-用单引号"}},[t._v("#")]),t._v(" 7.原样输出字符串，不进行转义或取变量(用单引号)")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$name\\\"'")]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$name\\"\n')])])]),a("h3",{attrs:{id:"_8-显示命令执行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-显示命令执行结果"}},[t._v("#")]),t._v(" 8.显示命令执行结果")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n")])])]),a("p",[a("strong",[t._v("注意：")]),t._v(" 这里使用的是反引号 "),a("strong",[t._v("`")]),t._v(", 而不是单引号 "),a("strong",[t._v("'")]),t._v("。")]),t._v(" "),a("p",[t._v("结果将显示当前日期")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Thu Jul 24 10:08:46 CST 2014\n")])])]),a("h2",{attrs:{id:"_9-shell-printf-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-shell-printf-命令"}},[t._v("#")]),t._v(" 9 Shell printf 命令")]),t._v(" "),a("p",[t._v("上一章节我们学习了 Shell 的 echo 命令，本章节我们来学习 Shell 的另一个输出命令 printf。")]),t._v(" "),a("p",[t._v("printf 命令模仿 C 程序库（library）里的 printf() 程序。")]),t._v(" "),a("p",[t._v("printf 由 POSIX 标准所定义，因此使用 printf 的脚本比使用 echo 移植性好。")]),t._v(" "),a("p",[t._v("printf 使用引用文本或空格分隔的参数，外面可以在 printf 中使用格式化字符串，还可以制定字符串的宽度、左右对齐方式等。默认 printf 不会像 echo 自动添加换行符，我们可以手动添加 \\n。")]),t._v(" "),a("p",[t._v("printf 命令的语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("printf  format-string  [arguments...]\n")])])]),a("p",[a("strong",[t._v("参数说明：")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("format-string:")]),t._v(" 为格式控制字符串")]),t._v(" "),a("li",[a("strong",[t._v("arguments:")]),t._v(" 为参数列表。")])]),t._v(" "),a("p",[t._v("实例如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, Shell"')]),t._v("\nHello, Shell\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, Shell'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\nHello, Shell\n$\n")])])]),a("p",[t._v("接下来,我来用一个脚本来体现printf的强大功能：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author:菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url:www.runoob.com")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%-10s %-8s %-4s'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(" 姓名 性别 体重kg  \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%-10s %-8s %-4.2f'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(" 郭靖 男 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("66.1234")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%-10s %-8s %-4.2f'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(" 杨过 男 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("48.6543")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%-10s %-8s %-4.2f'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(" 郭芙 女 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("47.9876")]),t._v(" \n")])])]),a("p",[t._v("执行脚本，输出结果如下所示：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("姓名     性别   体重kg\n郭靖     男      66.12\n杨过     男      48.65\n郭芙     女      47.99\n")])])]),a("p",[t._v("%s %c %d %f都是格式替代符")]),t._v(" "),a("p",[t._v("%-10s 指一个宽度为10个字符（-表示左对齐，没有则表示右对齐），任何字符都会被显示在10个字符宽的字符内，如果不足则自动以空格填充，超过也会将内容全部显示出来。")]),t._v(" "),a("p",[t._v("%-4.2f 指格式化为小数，其中.2指保留2位小数。")]),t._v(" "),a("p",[t._v("更多实例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#!/bin/bash\n# author:菜鸟教程\n# url:www.runoob.com\n \n# format-string为双引号\nprintf "%d %s\\n" 1 "abc"\n\n# 单引号与双引号效果一样 \nprintf \'%d %s\\n\' 1 "abc" \n\n# 没有引号也可以输出\nprintf %s abcdef\n\n# 格式只指定了一个参数，但多出的参数仍然会按照该格式输出，format-string 被重用\nprintf %s abc def\n\nprintf "%s\\n" abc def\n\nprintf "%s %s %s\\n" a b c d e f g h i j\n\n# 如果没有 arguments，那么 %s 用NULL代替，%d 用 0 代替\nprintf "%s and %d \\n" \n')])])]),a("p",[t._v("执行脚本，输出结果如下所示：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1 abc\n1 abc\nabcdefabcdefabc\ndef\na b c\nd e f\ng h i\nj  \n and 0\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"printf的转义序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#printf的转义序列"}},[t._v("#")]),t._v(" printf的转义序列")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("序列")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("警告字符，通常为ASCII的BEL字符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("后退")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\c")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("抑制（不显示）输出结果中任何结尾的换行字符（只在%b格式指示符控制下的参数字符串中有效），而且，任何留在参数里的字符、任何接下来的参数以及任何留在格式字符串中的字符，都被忽略")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\f")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("换页（formfeed）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\n")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("换行")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\r")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("回车（Carriage return）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\t")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("水平制表符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\v")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("垂直制表符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一个字面上的反斜杠字符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\ddd")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("表示1到3位数八进制值的字符。仅在格式字符串中有效")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\0ddd")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("表示1到3位的八进制值字符")])])])]),t._v(" "),a("h3",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a string, no processing:<%s>'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('B"')]),t._v("\na string, no processing:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("nB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a string, no processing:<%b>'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('B"')]),t._v("\na string, no processing:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("A\nB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.runoob.com '),a("span",{pre:!0,attrs:{class:"token entity",title:"\\a"}},[t._v("\\a")]),t._v('"')]),t._v("\nwww.runoob.com $                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不换行")]),t._v("\n")])])]),a("h2",{attrs:{id:"_10-shell-test命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-shell-test命令"}},[t._v("#")]),t._v(" 10 Shell test命令")]),t._v(" "),a("p",[t._v("Shell中的 test 命令用于检查某个条件是否成立，它可以进行数值、字符和文件三个方面的测试。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"数值测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值测试"}},[t._v("#")]),t._v(" 数值测试")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-eq")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("等于则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-ne")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不等于则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-gt")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("大于则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-ge")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("大于等于则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-lt")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("小于则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-le")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("小于等于则为真")])])])]),t._v(" "),a("p",[t._v("实例演示：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("num1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("num2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -eq $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'两个数相等！'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'两个数不相等！'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("两个数相等！\n")])])]),a("p",[t._v("代码中的 [] 执行基本的算数运算，如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("result")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a+b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意等号两边不能有空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"result 为： '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$result")]),t._v('"')]),t._v("\n")])])]),a("p",[t._v("结果为:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("result 为： 11\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"字符串测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串测试"}},[t._v("#")]),t._v(" 字符串测试")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("等于则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("!=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不相等则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-z 字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("字符串的长度为零则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-n 字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("字符串的长度不为零则为真")])])])]),t._v(" "),a("p",[t._v("实例演示：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("num1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ru1noob"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("num2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'两个字符串相等!'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'两个字符串不相等!'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("两个字符串不相等!\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"文件测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件测试"}},[t._v("#")]),t._v(" 文件测试")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-e 文件名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果文件存在则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-r 文件名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果文件存在且可读则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-w 文件名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果文件存在且可写则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-x 文件名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果文件存在且可执行则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-s 文件名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果文件存在且至少有一个字符则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-d 文件名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果文件存在且为目录则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-f 文件名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果文件存在且为普通文件则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-c 文件名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果文件存在且为字符型特殊文件则为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-b 文件名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("如果文件存在且为块特殊文件则为真")])])])]),t._v(" "),a("p",[t._v("实例演示：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /bin\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" -e ./bash\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'文件已存在!'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'文件不存在!'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("文件已存在!\n")])])]),a("p",[t._v('另外，Shell还提供了与( -a )、或( -o )、非( ! )三个逻辑操作符用于将测试条件连接起来，其优先级为："!"最高，"-a"次之，"-o"最低。例如：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd /bin\nif test -e ./notFile -o -e ./bash\nthen\n    echo '至少有一个文件存在!'\nelse\n    echo '两个文件都不存在'\nfi\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("至少有一个文件存在!\n")])])]),a("h2",{attrs:{id:"_11-shell流程控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-shell流程控制"}},[t._v("#")]),t._v(" 11 Shell流程控制")]),t._v(" "),a("h3",{attrs:{id:"if"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if"}},[t._v("#")]),t._v(" if")]),t._v(" "),a("p",[t._v("if 语句语法格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" condition\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    command1 \n    command2\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    commandN \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("写成一行（适用于终端命令提示符）：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -c "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ssh"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" -gt "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("末尾的fi就是if倒过来拼写，后面还会遇到类似的。")]),t._v(" "),a("h3",{attrs:{id:"if-else"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-else"}},[t._v("#")]),t._v(" if else")]),t._v(" "),a("p",[t._v("if else 语法格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" condition\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    command1 \n    command2\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    commandN\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("h3",{attrs:{id:"if-else-if-else"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-else-if-else"}},[t._v("#")]),t._v(" if else-if else")]),t._v(" "),a("p",[t._v("if else-if else 语法格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" condition1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    command1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" condition2 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" \n    command2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    commandN\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("h3",{attrs:{id:"for-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-循环"}},[t._v("#")]),t._v(" for 循环")]),t._v(" "),a("p",[t._v("与其他编程语言类似，Shell支持for循环。")]),t._v(" "),a("p",[t._v("for循环一般格式为：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" item1 item2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". itemN\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    command1\n    command2\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    commandN\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("写成一行：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" item1 item2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". itemN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" command1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" command2… "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("当变量值在列表里，for循环即执行一次所有命令，使用变量名获取列表中的当前取值。命令可为任何有效的shell命令和语句。in列表可以包含替换、字符串和文件名。")]),t._v(" "),a("p",[t._v("in列表是可选的，如果不用它，for循环使用命令行的位置参数。")]),t._v(" "),a("p",[t._v("例如，顺序输出当前列表中的数字：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("loop")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The value is: '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$loop")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("The value is: 1\nThe value is: 2\nThe value is: 3\nThe value is: 4\nThe value is: 5\n")])])]),a("p",[t._v("顺序输出字符串中的字符：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is a string'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("This is a string\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"while-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while-语句"}},[t._v("#")]),t._v(" while 语句")]),t._v(" "),a("p",[t._v("while循环用于不断执行一系列命令，也用于从输入文件中读取数据；命令通常为测试条件。其格式为：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" condition\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("以下是一个基本的while循环，测试条件是：如果int小于等于5，那么条件返回真。int从0开始，每次循环处理时，int加1。运行上述脚本，返回数字1到5，然后终止。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v(" $int"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"int++"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("运行脚本，输出：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1\n2\n3\n4\n5\n")])])]),a("p",[t._v("以上实例使用了 Bash let 命令，它用于执行一个或多个表达式，变量计算中不需要加上 $ 来表示变量，具体可查阅："),a("a",{attrs:{href:"https://www.runoob.com/linux/linux-comm-let.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bash let 命令"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("while循环可用于读取键盘信息。下面的例子中，输入信息被设置为变量FILM，按"),a("code",[t._v("Ctrl-D")]),t._v("结束循环。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'按下 <CTRL-D> 退出'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'输入你最喜欢的网站名: '")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" FILM\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"是的！'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$FILM")]),t._v(' 是一个好网站"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("运行脚本，输出类似下面：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("按下 <CTRL-D> 退出\n输入你最喜欢的网站名:菜鸟教程\n是的！菜鸟教程 是一个好网站\n")])])]),a("h3",{attrs:{id:"无限循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无限循环"}},[t._v("#")]),t._v(" 无限循环")]),t._v(" "),a("p",[t._v("无限循环语法格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("或者")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("或者")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")])]),t._v("\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"until-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#until-循环"}},[t._v("#")]),t._v(" until 循环")]),t._v(" "),a("p",[t._v("until 循环执行一系列命令直至条件为 true 时停止。")]),t._v(" "),a("p",[t._v("until 循环与 while 循环在处理方式上刚好相反。")]),t._v(" "),a("p",[t._v("一般 while 循环优于 until 循环，但在某些时候—也只是极少数情况下，until 循环更加有用。")]),t._v(" "),a("p",[t._v("until 语法格式:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("until")]),t._v(" condition\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("condition 一般为条件表达式，如果返回值为 false，则继续执行循环体内的语句，否则跳出循环。")]),t._v(" "),a("p",[t._v("以下实例我们使用 until 命令来输出 0 ~ 9 的数字：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("until")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" -lt "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $a + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("运行结果：")]),t._v(" "),a("p",[t._v("输出结果为：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"case"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[t._v("#")]),t._v(" case")]),t._v(" "),a("p",[t._v("Shell case语句为多选择语句。可以用case语句匹配一个值与一个模式，如果匹配成功，执行相匹配的命令。case语句格式如下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 值 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n模式1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    command1\n    command2\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    commandN\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n模式2）\n    command1\n    command2\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    commandN\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n")])])]),a("p",[t._v("case工作方式如上所示。取值后面必须为单词in，每一模式必须以右括号结束。取值可以为变量或常数。匹配发现取值符合某一模式后，其间所有命令开始执行直至 ;;。")]),t._v(" "),a("p",[t._v("取值将检测匹配的每一个模式。一旦模式匹配，则执行完匹配模式相应命令后不再继续其他模式。如果无一匹配模式，使用星号 * 捕获该值，再执行后面的命令。")]),t._v(" "),a("p",[t._v("下面的脚本提示输入1到4，与每一种模式进行匹配：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'输入 1 到 4 之间的数字:'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你输入的数字为:'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" aNum\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aNum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你选择了 1'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你选择了 2'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你选择了 3'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你选择了 4'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    *"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你没有输入 1 到 4 之间的数字'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n")])])]),a("p",[t._v("输入不同的内容，会有不同的结果，例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("输入 1 到 4 之间的数字:\n你输入的数字为:\n3\n你选择了 3\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"跳出循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跳出循环"}},[t._v("#")]),t._v(" 跳出循环")]),t._v(" "),a("p",[t._v("在循环过程中，有时候需要在未达到循环结束条件时强制跳出循环，Shell使用两个命令来实现该功能：break和continue。")]),t._v(" "),a("h4",{attrs:{id:"break命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#break命令"}},[t._v("#")]),t._v(" break命令")]),t._v(" "),a("p",[t._v("break命令允许跳出所有循环（终止执行后面的所有循环）。")]),t._v(" "),a("p",[t._v("下面的例子中，脚本进入死循环直至用户输入数字大于5。要跳出这个循环，返回到shell提示符下，需要使用break命令。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入 1 到 5 之间的数字:"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" aNum\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aNum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你输入的数字为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aNum")]),t._v('!"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        *"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你输入的数字不是 1 到 5 之间的! 游戏结束"')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("执行以上代码，输出结果为：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("输入 1 到 5 之间的数字:3\n你输入的数字为 3!\n输入 1 到 5 之间的数字:7\n你输入的数字不是 1 到 5 之间的! 游戏结束\n")])])]),a("h4",{attrs:{id:"continue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#continue"}},[t._v("#")]),t._v(" continue")]),t._v(" "),a("p",[t._v("continue命令与break命令类似，只有一点差别，它不会跳出所有循环，仅仅跳出当前循环。")]),t._v(" "),a("p",[t._v("对上面的例子进行修改：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入 1 到 5 之间的数字: "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" aNum\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aNum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你输入的数字为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aNum")]),t._v('!"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        *"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你输入的数字不是 1 到 5 之间的!"')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("continue")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"游戏结束"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("运行代码发现，当输入大于5的数字时，该例中的循环不会结束，语句 "),a("strong",[t._v('echo "游戏结束"')]),t._v(" 永远不会被执行。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"case-esac"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-esac"}},[t._v("#")]),t._v(" case ... esac")]),t._v(" "),a("p",[a("strong",[t._v("case ... esac")]),t._v(" 与其他语言中的 switch ... case 语句类似，是一种多分枝选择结构，每个 case 分支用右圆括号开始，用两个分号 "),a("strong",[t._v(";;")]),t._v(" 表示 break，即执行结束，跳出整个 case ... esac 语句，esac（就是 case 反过来）作为结束标记。")]),t._v(" "),a("p",[t._v("case ... esac 语法格式如下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 值 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n模式1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    command1\n    command2\n    command3\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n模式2）\n    command1\n    command2\n    command3\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    command1\n    command2\n    command3\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n")])])]),a("p",[t._v("case 后为取值，值可以为变量或常数。")]),t._v(" "),a("p",[t._v("值后为关键字 in，接下来是匹配的各种模式，每一模式最后必须以右括号结束，模式支持正则表达式。")]),t._v(" "),a("h3",{attrs:{id:"实例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-2"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("site")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$site")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"菜鸟教程"')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"google"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Google 搜索"')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"taobao"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"淘宝网"')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n")])])]),a("p",[t._v("输出结果为：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("菜鸟教程\n")])])]),a("h2",{attrs:{id:"_12-shell函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-shell函数"}},[t._v("#")]),t._v(" 12 Shell函数")]),t._v(" "),a("h3",{attrs:{id:"函数定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数定义"}},[t._v("#")]),t._v(" 函数定义")]),t._v(" "),a("p",[t._v("linux shell 可以用户定义函数，然后在shell脚本中可以随便调用。")]),t._v(" "),a("p",[t._v("shell中函数的定义格式如下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" funname "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("return int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("1、可以带function fun() 定义，也可以直接fun() 定义,不带任何参数。")]),t._v(" "),a("li",[t._v("2、参数返回，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。 return后跟数值n(0-255")])]),t._v(" "),a("p",[t._v("下面的例子定义了一个函数并进行调用：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author:菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url:www.runoob.com")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("demoFun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是我的第一个 shell 函数!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-----函数开始执行-----"')]),t._v("\ndemoFun\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-----函数执行完毕-----"')]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-----函数开始执行-----\n这是我的第一个 shell 函数!\n-----函数执行完毕-----\n")])])]),a("p",[t._v("下面定义一个带有return语句的函数：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author:菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url:www.runoob.com")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("funWithReturn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这个函数会对输入的两个数字进行相加运算..."')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入第一个数字: "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" aNum\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入第二个数字: "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" anotherNum\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"两个数字分别为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aNum")]),t._v(" 和 "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$anotherNum")]),t._v(' !"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$((")]),t._v("$aNum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("$anotherNum"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("))")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfunWithReturn\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入的两个数字之和为 '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(' !"')]),t._v("\n")])])]),a("p",[t._v("输出类似下面：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("这个函数会对输入的两个数字进行相加运算...\n输入第一个数字: \n1\n输入第二个数字: \n2\n两个数字分别为 1 和 2 !\n输入的两个数字之和为 3 !\n")])])]),a("p",[t._v("函数返回值在调用该函数后通过 $? 来获得。")]),t._v(" "),a("p",[t._v("注意：所有函数在使用前必须定义。这意味着必须将函数放在脚本开始部分，直至shell解释器首次发现它时，才可以使用。调用函数仅使用其函数名即可。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"函数参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数参数"}},[t._v("#")]),t._v(" 函数参数")]),t._v(" "),a("p",[t._v("在Shell中，调用函数时可以向其传递参数。在函数体内部，通过 $n 的形式来获取参数的值，例如，$1表示第一个参数，$2表示第二个参数...")]),t._v(" "),a("p",[t._v("带参数的函数示例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#!/bin/bash\n# author:菜鸟教程\n# url:www.runoob.com\n\nfunWithParam(){\n    echo "第一个参数为 $1 !"\n    echo "第二个参数为 $2 !"\n    echo "第十个参数为 $10 !"\n    echo "第十个参数为 ${10} !"\n    echo "第十一个参数为 ${11} !"\n    echo "参数总数有 $# 个!"\n    echo "作为一个字符串输出所有参数 $* !"\n}\nfunWithParam 1 2 3 4 5 6 7 8 9 34 73\n')])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("第一个参数为 1 !\n第二个参数为 2 !\n第十个参数为 10 !\n第十个参数为 34 !\n第十一个参数为 73 !\n参数总数有 11 个!\n作为一个字符串输出所有参数 1 2 3 4 5 6 7 8 9 34 73 !\n")])])]),a("p",[t._v("注意，$10 不能获取第十个参数，获取第十个参数需要${10}。当n>=10时，需要使用${n}来获取参数。")]),t._v(" "),a("p",[t._v("另外，还有几个特殊字符用来处理参数：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("参数处理")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$#")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("传递到脚本或函数的参数个数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$*")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("以一个单字符串显示所有向脚本传递的参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$$")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("脚本运行的当前进程ID号")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$!")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("后台运行的最后一个进程的ID号")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$@")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("与$*相同，但是使用时加引号，并在引号中返回每个参数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("显示Shell使用的当前选项，与set命令功能相同。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("$?")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。")])])])]),t._v(" "),a("h2",{attrs:{id:"_13-shell-输入-输出重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-shell-输入-输出重定向"}},[t._v("#")]),t._v(" 13 Shell 输入/输出重定向")]),t._v(" "),a("p",[t._v("大多数 UNIX 系统命令从你的终端接受输入并将所产生的输出发送回到您的终端。一个命令通常从一个叫标准输入的地方读取输入，默认情况下，这恰好是你的终端。同样，一个命令通常将其输出写入到标准输出，默认情况下，这也是你的终端。")]),t._v(" "),a("p",[t._v("重定向命令列表如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("command > file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输出重定向到 file。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("command < file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输入重定向到 file。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("command >> file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输出以追加的方式重定向到 file。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n > file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将文件描述符为 n 的文件重定向到 file。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n >> file")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将文件描述符为 n 的文件以追加的方式重定向到 file。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n >& m")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输出文件 m 和 n 合并。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("n <& m")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将输入文件 m 和 n 合并。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<< tag")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将开始标记 tag 和结束标记 tag 之间的内容作为输入。")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("需要注意的是文件描述符 0 通常是标准输入（STDIN），1 是标准输出（STDOUT），2 是标准错误输出（STDERR）。")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"输出重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出重定向"}},[t._v("#")]),t._v(" 输出重定向")]),t._v(" "),a("p",[t._v("重定向一般通过在命令间插入特定的符号来实现。特别的，这些符号的语法如下所示:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("command1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" file1\n")])])]),a("p",[t._v("上面这个命令执行command1然后将输出的内容存入file1。")]),t._v(" "),a("p",[t._v("注意任何file1内的已经存在的内容将被新内容替代。如果要将新内容添加在文件末尾，请使用>>操作符。")]),t._v(" "),a("h4",{attrs:{id:"实例-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-3"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("执行下面的 who 命令，它将命令的完整的输出重定向在用户文件中(users):")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("who")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n")])])]),a("p",[t._v("执行后，并没有在终端输出信息，这是因为输出已被从默认的标准输出设备（终端）重定向到指定的文件。")]),t._v(" "),a("p",[t._v("你可以使用 cat 命令查看文件内容：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n_mbsetupuser console  Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":35 \ntianqixin    console  Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":35 \ntianqixin    ttys000  Dec  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":33 \n")])])]),a("p",[t._v("输出重定向会覆盖文件内容，请看下面的例子：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"菜鸟教程：www.runoob.com"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n菜鸟教程：www.runoob.com\n$\n")])])]),a("p",[t._v("如果不希望文件内容被覆盖，可以使用 >> 追加到文件末尾，例如：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"菜鸟教程：www.runoob.com"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n菜鸟教程：www.runoob.com\n菜鸟教程：www.runoob.com\n$\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"输入重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入重定向"}},[t._v("#")]),t._v(" 输入重定向")]),t._v(" "),a("p",[t._v("和输出重定向一样，Unix 命令也可以从文件获取输入，语法为：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("command1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" file1\n")])])]),a("p",[t._v("这样，本来需要从键盘获取输入的命令会转移到文件读取内容。")]),t._v(" "),a("p",[t._v("注意：输出重定向是大于号(>)，输入重定向是小于号(<)。")]),t._v(" "),a("h4",{attrs:{id:"实例-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-4"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("接着以上实例，我们需要统计 users 文件的行数,执行以下命令：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n")])])]),a("p",[t._v("也可以将输入重定向到 users 文件：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n")])])]),a("p",[t._v("注意：上面两个例子的结果不同：第一个例子，会输出文件名；第二个不会，因为它仅仅知道从标准输入读取内容。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("command1 < infile > outfile\n")])])]),a("p",[t._v("同时替换输入和输出，执行command1，从文件infile读取内容，然后将输出写入到outfile中。")]),t._v(" "),a("h3",{attrs:{id:"重定向深入讲解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重定向深入讲解"}},[t._v("#")]),t._v(" 重定向深入讲解")]),t._v(" "),a("p",[t._v("一般情况下，每个 Unix/Linux 命令运行时都会打开三个文件：")]),t._v(" "),a("ul",[a("li",[t._v("标准输入文件(stdin)：stdin的文件描述符为0，Unix程序默认从stdin读取数据。")]),t._v(" "),a("li",[t._v("标准输出文件(stdout)：stdout 的文件描述符为1，Unix程序默认向stdout输出数据。")]),t._v(" "),a("li",[t._v("标准错误文件(stderr)：stderr的文件描述符为2，Unix程序会向stderr流中写入错误信息。")])]),t._v(" "),a("p",[t._v("默认情况下，command > file 将 stdout 重定向到 file，command < file 将stdin 重定向到 file。")]),t._v(" "),a("p",[t._v("如果希望 stderr 重定向到 file，可以这样写：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])])]),a("p",[t._v("如果希望 stderr 追加到 file 文件末尾，可以这样写：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])])]),a("p",[a("strong",[t._v("2")]),t._v(" 表示标准错误文件(stderr)。")]),t._v(" "),a("p",[t._v("如果希望将 stdout 和 stderr 合并后重定向到 file，可以这样写：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n\n或者\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n")])])]),a("p",[t._v("如果希望对 stdin 和 stdout 都重定向，可以这样写：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" file1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("file2\n")])])]),a("p",[t._v("command 命令将 stdin 重定向到 file1，将 stdout 重定向到 file2。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"here-document"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#here-document"}},[t._v("#")]),t._v(" Here Document")]),t._v(" "),a("p",[t._v("Here Document 是 Shell 中的一种特殊的重定向方式，用来将输入重定向到一个交互式 Shell 脚本或程序。")]),t._v(" "),a("p",[t._v("它的基本的形式如下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("delimiter\n    document\ndelimiter")]),t._v("\n")])])]),a("p",[t._v("它的作用是将两个 delimiter 之间的内容(document) 作为输入传递给 command。")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：")]),t._v(" "),a("ul",[a("li",[t._v("结尾的delimiter 一定要顶格写，前面不能有任何字符，后面也不能有任何字符，包括空格和 tab 缩进。")]),t._v(" "),a("li",[t._v("开始的delimiter前后的空格会被忽略掉。")])])]),t._v(" "),a("h4",{attrs:{id:"实例-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-5"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("在命令行中通过 wc -l 命令计算 Here Document 的行数：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n    欢迎来到\n    菜鸟教程\n    www.runoob.com\nEOF")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出结果为 3 行")]),t._v("\n$\n")])])]),a("p",[t._v("我们也可以将 Here Document 用在脚本中，例如：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author:菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url:www.runoob.com")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n欢迎来到\n菜鸟教程\nwww.runoob.com\nEOF")]),t._v("\n")])])]),a("p",[t._v("执行以上脚本，输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("欢迎来到\n菜鸟教程\nwww.runoob.com\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"dev-null-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dev-null-文件"}},[t._v("#")]),t._v(" /dev/null 文件")]),t._v(" "),a("p",[t._v("如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到 /dev/null：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null\n")])])]),a("p",[t._v('/dev/null 是一个特殊的文件，写入到它的内容都会被丢弃；如果尝试从该文件读取内容，那么什么也读不到。但是 /dev/null 文件非常有用，将命令的输出重定向到它，会起到"禁止输出"的效果。')]),t._v(" "),a("p",[t._v("如果希望屏蔽 stdout 和 stderr，可以这样写：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("**注意：**0 是标准输入（STDIN），1 是标准输出（STDOUT），2 是标准错误输出（STDERR）。")])]),t._v(" "),a("h2",{attrs:{id:"_14-shell-文件包含"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-shell-文件包含"}},[t._v("#")]),t._v(" 14 Shell 文件包含")]),t._v(" "),a("p",[t._v("和其他语言一样，Shell 也可以包含外部脚本。这样可以很方便的封装一些公用的代码作为一个独立的文件。")]),t._v(" "),a("p",[t._v("Shell 文件包含的语法格式如下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" filename   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意点号(.)和文件名中间有一空格")]),t._v("\n\n或\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" filename\n")])])]),a("h3",{attrs:{id:"实例-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-6"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("创建两个 shell 脚本文件。")]),t._v(" "),a("p",[t._v("test1.sh 代码如下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author:菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url:www.runoob.com")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.runoob.com"')]),t._v("\n")])])]),a("p",[t._v("test2.sh 代码如下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# author:菜鸟教程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url:www.runoob.com")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用 . 号来引用test1.sh 文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" ./test1.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者使用以下包含文件代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# source ./test1.sh")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"菜鸟教程官网地址：'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$url")]),t._v('"')]),t._v("\n")])])]),a("p",[t._v("接下来，我们为 test2.sh 添加可执行权限并执行：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x test2.sh \n$ ./test2.sh \n菜鸟教程官网地址：http://www.runoob.com\n")])])]),a("blockquote",[a("p",[t._v("**注：**被包含的文件 test1.sh 不需要可执行权限。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);